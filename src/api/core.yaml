openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080/api/progfrog
  description: Generated server url
paths:
  /game/execute:
    post:
      tags:
      - game-controller
      operationId: executeScript
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ScriptResult'
  /game/compileScript:
    post:
      tags:
      - game-controller
      operationId: compileScript
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompileScriptRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompileMapResponse'
  /game/compileMap:
    post:
      tags:
      - game-controller
      operationId: compileMap
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompileMapRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompileMapResponse'
  /editor/setMap:
    post:
      tags:
      - map-editor-controller
      operationId: setMap
      parameters:
      - name: editorID
        in: query
        required: true
        schema:
          type: string
      - name: map
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MapEditorResponse'
  /editor/setFrog:
    post:
      tags:
      - map-editor-controller
      operationId: setFrog
      parameters:
      - name: editorID
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrogDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MapEditorResponse'
  /editor/setFood:
    post:
      tags:
      - map-editor-controller
      operationId: setFood
      parameters:
      - name: editorID
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapEditorFoodRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MapEditorResponse'
  /editor/draw:
    post:
      tags:
      - map-editor-controller
      operationId: draw
      parameters:
      - name: editorID
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MapEditorDrawRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MapEditorResponse'
  /editor/load:
    get:
      tags:
      - map-editor-controller
      operationId: loadMap
      parameters:
      - name: editorID
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MapEditorResponse'
  /editor/create:
    get:
      tags:
      - map-editor-controller
      operationId: createEmptyMap
      parameters:
      - name: initialWidth
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: initialHeight
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MapEditorResponse'
components:
  schemas:
    MethodCall:
      type: object
      properties:
        name:
          type: string
        result:
          type: string
    ScriptResult:
      required:
      - callStack
      type: object
      properties:
        callStack:
          type: array
          items:
            $ref: '#/components/schemas/MethodCall'
        exception:
          type: string
    CompileScriptRequest:
      required:
      - mapID
      - script
      type: object
      properties:
        mapID:
          type: string
        script:
          type: string
    CompileMapResponse:
      required:
      - mapID
      type: object
      properties:
        mapID:
          type: string
    CompileMapRequest:
      required:
      - map
      type: object
      properties:
        mapId:
          type: string
        map:
          type: string
        rowDelimiter:
          type: string
    Coordinate:
      required:
      - x
      - "y"
      type: object
      properties:
        x:
          type: integer
          format: int32
        "y":
          type: integer
          format: int32
    Direction:
      type: string
      enum:
      - NORTH
      - SOUTH
      - WEST
      - EAST
    FoodItemDTO:
      required:
      - amount
      - pos
      type: object
      properties:
        pos:
          $ref: '#/components/schemas/Coordinate'
        amount:
          type: integer
          format: int32
    FrogDTO:
      required:
      - direction
      - position
      type: object
      properties:
        position:
          $ref: '#/components/schemas/Coordinate'
        direction:
          $ref: '#/components/schemas/Direction'
    MapEditorResponse:
      required:
      - foodItems
      - map
      - mapID
      type: object
      properties:
        mapID:
          type: string
        map:
          type: string
        frog:
          $ref: '#/components/schemas/FrogDTO'
        foodItems:
          type: array
          items:
            $ref: '#/components/schemas/FoodItemDTO'
    MapEditorFoodRequest:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/Coordinate'
        foodCount:
          type: integer
          format: int32
    MapEditorDrawRequest:
      required:
      - pos
      - type
      type: object
      properties:
        pos:
          $ref: '#/components/schemas/Coordinate'
        type:
          $ref: '#/components/schemas/TileType'
    TileType:
      type: string
      enum:
      - WALL
      - FLOOR
      - VOID
      - NONE
